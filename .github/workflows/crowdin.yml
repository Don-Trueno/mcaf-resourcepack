name: Sync and Release

permissions:
  contents: write
  pull-requests: write

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */3 * * *'

jobs:
  synchronize-with-crowdin:
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      CROWDIN_PROJECT_ID: ${{ secrets.CROWDIN_PROJECT_ID }}
      CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Crowdin Action
        uses: crowdin/github-action@v2
        with:
          upload_sources: false
          upload_translations: false

          # Export options
          download_translations: true
          skip_untranslated_strings: true
          export_only_approved: false

          localization_branch_name: main
          create_pull_request: false
          commit_message: New Crowdin translations

  list_folders:
    runs-on: ubuntu-latest
    outputs:
      folders_json: ${{ steps.list_folders.outputs.folders_json }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: List Folders and Set as Output
        id: list_folders
        run: |
          FOLDERS=$(find ./resources -maxdepth 1 -type d -not -path './resources' -printf '"%f", ' | sed 's/, $//')
          echo "folders_json=[$FOLDERS]" >> $GITHUB_OUTPUT

  create_release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: set time
        run: |
          TIME="$(TZ='Asia/Shanghai' date +'%y%m%d%H%M')"
          echo "TIME=$TIME" >> $GITHUB_ENV


      - name: clean old release
        uses: dev-drprasad/delete-older-releases@v0.3.4
        with:
          keep_latest: 10
          delete_tags: true


      - name: create release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            自动构建的资源包。
            - Run ID: ${{ github.run_id }}
            - Commit SHA: ${{ github.sha }}
          name: Build ${{ env.TIME }}
          tag_name: "build-${{ github.run_id }}"

  release:
    needs: [synchronize-with-crowdin, list_folders, create_release]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        folder: ${{ fromJson(needs.list_folders.outputs.folders_json) }}
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Package Resources for ${{ matrix.folder }}
        run: |
          cd resources/${{ matrix.folder }}
          zip -r ../../${{ matrix.folder }}.zip ./*

      - name: Upload Packaged Release for ${{ matrix.folder }}
        uses: xresloader/upload-to-github-release@v1
        with:
          file: "${{ matrix.folder }}.zip"
          release_id: ${{ needs.create_release.outputs.release_id }}
          overwrite: true
