name: Upload Releases

on:
  workflow_dispatch:
    inputs:
      channel:
        description: 'Release channel'
        required: true
        type: choice
        default: beta
        options:
          - release
          - beta
          - alpha
      name:
        description: 'Version name'
        required: false
        type: string
      changes:
        description: 'Change notes (JSON string)'
        required: false
        type: string
  schedule:
    - cron: '0 18 * 1-3,5-12 0'
    - cron: '0 18 2-7,9,12,15,20,25,30 4 *'

jobs:
  sync_and_prepare:
    runs-on: ubuntu-latest
    outputs:
      has_commits: ${{ steps.check.outputs.has_commits }}
      channel: ${{ steps.check.outputs.channel }}
      folders_json: ${{ steps.list_folders.outputs.folders_json }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check recent commits
        id: check
        run: |
          date=1.week.ago
          day=$(date +%-d)
          channel=release
          if [[ $(date +%-m) == 4 ]]; then
            date=5.days.ago
            if [[ $day -lt 13 ]]; then
              date=3.days.ago
            fi
            if [[ $day -lt 8 ]]; then
              date=1.day.ago
              if [[ $day -lt 7 ]]; then
                channel=beta
              fi
            fi
            if [[ $day -lt 4 ]]; then
              if [[ $day == 2 ]]; then
                date=1.week.ago
              fi
              channel=alpha
            fi
          fi
          recent_log=$(git log --since=$date --stat --pretty="")
          echo "Recent log: $recent_log"
          if [[ $recent_log =~ /lang/ ]]; then
            echo "has_commits=true" >> $GITHUB_OUTPUT
          else
            echo "has_commits=false" >> $GITHUB_OUTPUT
          fi
          echo "channel=$channel" >> $GITHUB_OUTPUT

      - name: List folders
        id: list_folders
        run: |
          FOLDERS=$(find ./resources -maxdepth 1 -type d -not -path './resources' -printf '"%f", ' | sed 's/, $//')
          echo "folders_json=[$FOLDERS]" >> $GITHUB_OUTPUT

  release:
    needs: [sync_and_prepare]
    if: needs.sync_and_prepare.outputs.has_commits == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        folder: ${{ fromJson(needs.sync_and_prepare.outputs.folders_json) }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Package Resources for ${{ matrix.folder }}
        id: package
        run: |
          cp sources/${{ matrix.folder }}/* resources/${{ matrix.folder }}/assets/minecraft/lang
          cd resources/${{ matrix.folder }}
          zip -r '../../[AFTP] ${{ matrix.folder }}.zip' ./*
          TIME="$(date +%y%m%d)" # Changed
          echo "time=$TIME" >> $GITHUB_OUTPUT

      - name: Upload to Modrinth
        uses: mc-wiki/modrinth-publish@main
        with:
          token: ${{ secrets.MODRINTH_TOKEN }}
          project: '1NAoXRE0'
          version: '${{ inputs.name || steps.package.outputs.time }}+${{ matrix.folder }}'
          changelog: |
            ${{ inputs.changes && fromJson(inputs.changes) }}

            Resource packs built from the latest Crowdin translations.
            - Run ID: ${{ github.run_id }}
            - Commit SHA: ${{ github.sha }}
          loaders: minecraft
          game-versions: ${{ matrix.folder == '3D_Shareware_v1.34' && '3D-Shareware-v1.34' || matrix.folder == '22w13oneBlockAtATime' && '22w13oneblockatatime' || matrix.folder }}
          files: '["[AFTP] ${{ matrix.folder }}.zip"]'
          channel: ${{ inputs.channel || needs.sync_and_prepare.outputs.channel }}
