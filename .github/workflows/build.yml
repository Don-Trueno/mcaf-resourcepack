name: Build and Release

on:
  workflow_dispatch:
  push:
    branches:
      - l10n_main
    paths:
      - 'resources/**/**.json'
      - '!resources/**/en_us.json'


jobs:
  list_folders:
    runs-on: ubuntu-latest
    outputs:
      folders_json: ${{ steps.list_folders.outputs.folders_json }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: l10n_main

      - name: List Folders and Set as Output
        id: list_folders
        run: |
          FOLDERS=$(find ./resources -maxdepth 1 -type d -not -path './resources' -printf '"%f", ' | sed 's/, $//')
          echo "folders_json=[$FOLDERS]" >> $GITHUB_OUTPUT

  create_release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: create_release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            自动构建的资源包。
            - Run ID: ${{ github.run_id }}
            - Commit SHA: ${{ github.sha }}
          name: Build ${{ github.run_number }}
          tag_name: "build-${{ github.run_number }}"

  release:
    needs: [list_folders, create_release]
    runs-on: ubuntu-latest
    strategy:
      # Disabling fail-fast to ensure all matrix jobs run, even if one fails.
      fail-fast: false
      matrix:
        folder: ${{ fromJson(needs.list_folders.outputs.folders_json) }}
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Package Resources for ${{ matrix.folder }}
        run: |
          cd resources/${{ matrix.folder }}
          zip -r ../../${{ matrix.folder }}.zip ./*

      # This step uploads the generated zip file as a release asset to the GitHub release.
      - name: Upload Packaged Release for ${{ matrix.folder }}
        uses: xresloader/upload-to-github-release@v1
        with:
          file: "${{ matrix.folder }}.zip"
          release_id: ${{ needs.create_release.outputs.release_id }}
          overwrite: true

      - name: Clean up releases
        uses: sgpublic/delete-release-action@v1.1
        with:
          release-drop: true
          release-keep-count: 2
          release-drop-tag: true
